<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
        <!-- ajax사용하기 위해 jquery cdn가져옴 -->
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <!-- axios사용하기 위해 cdn가져옴 -->
        <title>Document</title>
    </head>
    <body>
        <form name="register-form">
            <label for="name">이름</label>
            <input type="text" id="name" required /><br />
            <label for="email">이메일</label>
            <input type="email" id="email" required /><br /><br />
            <button type="button" onclick="ajaxGet()">ajax get 제출</button>
            <button type="button" onclick="ajaxPost()">ajax post 제출</button>
            <button type="button" onclick="axiosGet()">axios get 제출</button>
            <button type="button" onclick="axiosPost()">axios post 제출</button>
            <button type="button" onclick="fectchGet()">fectch get 제출</button>
            <button type="button" onclick="fectchPost()">fectch post 제출</button>
        </form>
        <div class="result"></div>
        <script>
            const resultBox = document.querySelector('.result');
            function ajaxGet() {
                //폼가져오기

                const form = document.forms['register-form'];
                //백엔드로 보내는 데이터
                const data = {
                    // 서버에 보낼 json만든거라고 생각하면됨
                    name: form.name.value,
                    email: form.email.value,
                };
                $.ajax({
                    type: 'GET',
                    url: '/ajax',
                    data: data,
                    success: (res) => {
                        //console.log(`res : ${res}`); //이렇게 출력하면 안나옴!
                        console.log('res', res); //응답
                        resultBox.textContent = `${res.name} ${res.email}`;
                    },
                    error: (res) => {},
                });
            }
            function ajaxPost() {
                //폼가져오기
                const form = document.forms['register-form'];
                //비동기 일 때는 required가 안먹힘 예외처리하는법!
                if (form.name.value === '') {
                    alert('이름을 입력하세요');
                    return;
                }
                $.ajax({
                    type: 'POST',
                    url: '/ajax', // type만 다르면 주소같아도됨
                    data: {
                        name: form.name.value,
                        email: form.email.value,
                    },
                    success: (res) => {
                        console.log('res', res);
                        resultBox.textContent = `${res.username}님 이메일 : ${res.email}`;
                    },
                    error: (res) => {
                        console.log('fail');
                    },
                });
            }
            function axiosGet() {
                const form = document.forms['register-form'];
                const data = {
                    username: form.name.value,
                    mail: form.email.value,
                };

                //일반적으로 사용되는 방법
                axios({
                    method: 'GET',
                    url: '/axios',
                    //url:`/axios?username=${form.name.value}&mail=${form.email.value}`
                    params: data, //axios get일 때는 params로 보냄
                }).then((res) => {
                    console.log(res);
                    //console.log(`${res}`);백틱이 object처리를 안해줘서 그냥 밖에 쓰면된다.만능이아니다.. ㅋㅋ
                    resultBox.textContent = `${res.data.username}님 주소는 ${res.data.mail}입니다`;
                    //받은거 그대로 보내면 res.data.username으로 접근해야한다.
                });
            }
            async function axiosPost() {
                const data = {
                    //이걸제일 많이 사용하게 될 것이다.
                    username: document.querySelector('#name').value,
                    email: document.querySelector('#email').value,
                };
                try {
                    //방법 2 : async, await방법
                    const res = await axios({
                        method: 'POST',
                        url: '/axios',
                        data,
                    });
                    console.log(res);
                    const { name, address } = res.data;
                    resultBox.textContent = `${name} ${address}`;
                } catch (error) {
                    console.log(error);
                }

                /*방법1 : then사용하기
                axios({
                    method: 'POST',
                    url: '/axios',
                    data,
                }).then((res) => {
                    console.log('res', res);
                    resultBox.textContent = `${res.data.name} ${res.data.address}`;
                });*/
            }

            function fectchGet() {
                const form = document.forms['register-form'];
                const url = `?name=${form.name.value}&email=${form.email.value}`;
                //axios도 params안하고 url로 만들어서 보내도된다!
                //querystring
                fetch(`/fetch${url}`, {
                    method: 'GET',
                })
                    .then((res) => {
                        //json응답
                        console.log('res', res);
                        //json응답을 native javascript 객체로 파싱
                        return res.json();
                    })
                    .then((data) => {
                        const { name, email } = data;
                        console.log(data);
                        resultBox.textContent = `${name}님 주소는 ${email}입니다.`;
                    });
            }
            function fectchPost() {
                const data = {
                    username: document.querySelector('#name').value,
                    email: document.querySelector('#email').value,
                };

                fetch('/fetch', {
                    //주소쓴다음에 객체
                    method: 'post',
                    body: JSON.stringify(data), //문자열 형태로 바꿔준다음에 보냄 fetch가 알아서 처리해줌..요상..
                    headers: {
                        //C랑 T대문자
                        'Content-Type': 'application/json',
                    },
                })
                    .then((res) => {
                        console.log('res', res);
                        return res.json();
                    })
                    .then((data) => {
                        console.log('data', data);
                        resultBox.textContent = `${data.username}님 주소는 ${data.email}입니다.`;
                    });
            }
        </script>
    </body>
</html>
