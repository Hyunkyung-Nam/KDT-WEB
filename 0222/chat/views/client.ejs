<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <script src="/socket.io/socket.io.js"></script>
        <style>
            #body {
                padding-top: 10px;
                width: 50%;
                height: 70vh;
                position: relative;
                background-color: skyblue;
            }
            #chat {
                width: 100%;
                position: absolute;
                bottom: 1px;
                display: flex;
                justify-content: space-between;
            }
            #chat input {
                border-radius: 10px;
                margin-right: 10px;
                margin: 0;
                padding: 10px;
                width: 85%;
            }
            #chat button {
                width: 15%;
                border-radius: 10px;
                margin-right: 10px;
                margin: 0;
                padding: 10px;
            }
            .my-chat {
                display: flex;
                justify-content: end;
                padding: 2px 0;
            }
            .my-chat p {
                margin: 0;
                padding: 10px;
                background-color: yellow;
                border-radius: 10px;
                margin-right: 10px;
            }
            .other-chat {
                display: flex;
                justify-content: start;
                padding: 2px 0;
            }
            .other-chat p {
                margin: 0;
                padding: 10px;
                background-color: white;
                border-radius: 10px;
                margin-left: 10px;
            }
            #notice {
                display: flex;
                flex-direction: column;
                text-align: center;
                color: gray;
            }
            #notice p {
                margin: 0;
            }
            .secret-chat p {
                background-color: pink;
            }
        </style>
        <title>Document</title>
    </head>
    <body>
        <h1>채팅방</h1>
        <div id="main">
            <form id="room">
                <input type="text" id="roomName" placeholder="채팅방 만들기" />
                <input type="text" id="userName" placeholder="사용자 이름 입력" />
                <button>채팅방 생성</button><br />
            </form>
            <ul id="lists"></ul>
        </div>
        <div id="body" hidden>
            <div id="message">
                <div id="notice"></div>
            </div>
            <form id="chat">
                <select id="userList">
                    <option value="">전체</option>
                </select>
                <input type="text" id="chatMessage" placeholder="메세지입력" />
                <button>메세지 전송</button>
            </form>
        </div>
        <script>
            const socket = io();
            const roomForm = document.querySelector('#room');
            const chatForm = document.querySelector('#chat');
            const message = document.querySelector('#message');
            const notice = document.querySelector('#notice');

            let myName = '';

            //소켓이벤트

            //개설된 채팅방 리스트
            //안보이는 이유가 뭘까용
            socket.on('roomList', (roomLists) => {
                const lists = document.querySelector('#lists');
                lists.textContent = '';
                roomLists.forEach((room) => {
                    const li = document.createElement('li');
                    li.textContent = `${room}이름과 닉네임 입력 후 입장`;
                    lists.appendChild(li);
                });
            });
            //접속한 사용자 리스트
            socket.on('userList', (users) => {
                console.log(users);
                const lists = document.querySelector('#userList');
                let options = `<option value='all'>전체</option>`;
                for (let user of users) {
                    if (user.username === myName) {
                        continue;
                    }
                    options += `<option value=${user.key}>${user.username}</option>`;
                }
                lists.innerHTML = options;
            });
            socket.on('notice', (res) => {
                const div = document.createElement('div');
                const p = document.createElement('p');
                console.log('new message', res);
                p.textContent = res;
                div.appendChild(p);
                notice.appendChild(div);
            });

            socket.on('enter', (res) => {
                const div = document.createElement('div');
                const p = document.createElement('p');
                console.log(res);
                p.textContent = res;
                div.appendChild(p);
                notice.appendChild(div);
            });

            socket.on('newMessage', (res) => {
                const div = document.createElement('div');
                const p = document.createElement('p');
                console.log(res);
                console.log(res.message);
                if (res.dm) {
                    div.classList.add('secret-chat');
                }
                if (myName === res.userName) {
                    //내가 입력한 텍스트
                    div.classList.add('my-chat');
                } else {
                    //상대가 입력한 텍스트
                    div.classList.add('other-chat');
                }
                //귓말추가
                p.textContent = res.dm
                    ? `(속닥속닥) ${res.userName} : ${res.message}`
                    : `${res.userName} : ${res.message}`;
                div.appendChild(p);
                message.appendChild(div);
            });

            //폼이벤트
            roomForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const roomName = roomForm.querySelector('#roomName').value;
                const userName = roomForm.querySelector('#userName').value;

                if (roomName === '' || userName === '') {
                    alert('방이름 및 닉네임을 적으세요');
                    return;
                }

                socket.emit('create', { roomName, userName }, (res) => {
                    //전역변수에 입력한 닉네임 저장
                    myName = userName;
                    const main = document.querySelector('#main');
                    const body = document.querySelector('#body');
                    main.hidden = true;
                    body.hidden = false;
                });
            });

            chatForm.addEventListener('submit', (event) => {
                event.preventDefault();
                let message = chatForm.querySelector('#chatMessage');
                const user = chatForm.querySelector('#userList');
                console.log(user);
                const data = {
                    select: user.value,
                    userName: myName,
                    message: message.value,
                };
                socket.emit('sendMessage', data);
                message.value = '';
            });
        </script>
    </body>
</html>
